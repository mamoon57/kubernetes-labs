apiVersion: v1
kind: Namespace
metadata:
  name: deploy-examples
---
# ServiceAccount (used by Deployment)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-sa
  namespace: deploy-examples
---
# Image pull secret (create with kubectl create secret docker-registry and set name)
# kubectl create secret docker-registry regcred --docker-server=... --docker-username=... --docker-password=... --docker-email=...
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sa-deployment
  namespace: deploy-examples
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sa-app
  template:
    metadata:
      labels:
        app: sa-app
    spec:
      serviceAccountName: app-sa
      imagePullSecrets:
        - name: regcred  # replace with your secret name
      containers:
        - name: private-app
          image: myregistry.example.com/myrepo/myapp:latest
          ports:
            - containerPort: 8080
---
# Minimal Role + RoleBinding example (if pod needs to read ConfigMaps in same ns)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: read-configmaps
  namespace: deploy-examples
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sa-read-cm
  namespace: deploy-examples
subjects:
  - kind: ServiceAccount
    name: app-sa
    namespace: deploy-examples
roleRef:
  kind: Role
  name: read-configmaps
  apiGroup: rbac.authorization.k8s.io